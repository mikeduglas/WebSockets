#GROUP(%CreateManifest, %pManifestFile, %pAssemblyName, %pAssemblyVersion),AUTO
  #CREATE(%pManifestFile)
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
  <assemblyIdentity
    version="1.0.0.0"
    processorArchitecture="X86"
    name="SoftVelocity.Clarion%CWVersion.Application"
    type="win32"
  />
  <description>%Application</description>
  #CALL(%InsertDependency, %pAssemblyName, %pAssemblyVersion)
</assembly>
  #CLOSE(%pManifestFile)
#! --------------------------------------------------------------------------
#GROUP(%UpdateManifest, %pManifestFile, %pAssemblyName, %pAssemblyVersion),AUTO
  #DECLARE(%FileLine)
  #DECLARE(%AssemblyFound, LONG)
  #DECLARE(%TmpFile)
  #SET(%TmpFile, %ManifestFile &'.$$$')
  #OPEN(%pManifestFile),READ
  #CREATE(%TmpFile)
  #LOOP
    #READ(%FileLine)
    #IF(%FileLine = %EOF)
      #BREAK
    #ENDIF
    #IF(INSTRING(' version="',%FileLine,1,1) > 0 AND %AssemblyFound)
        version="%pAssemblyVersion"
    #ELSIF(INSTRING(' name="'& %pAssemblyName &'"',%FileLine,1,1) > 0)
      #SET(%AssemblyFound, %True)
%FileLine
    #ELSIF(INSTRING('</assembly>',%FileLine,1,1) > 0 AND NOT %AssemblyFound)
      #CALL(%InsertDependency, %pAssemblyName, %pAssemblyVersion)
%FileLine
    #ELSE  
%FileLine
    #ENDIF
  #ENDLOOP
  #CLOSE(%pManifestFile),READ
  #CLOSE(%TmpFile)
  #REPLACE(%pManifestFile,%TmpFile)
  #REMOVE(%TmpFile)
#! --------------------------------------------------------------------------
#GROUP(%InsertDependency, %pAssemblyName, %pAssemblyVersion),AUTO
  <dependency>
    <dependentAssembly>
      <assemblyIdentity 
        type="win32" 
        name="%pAssemblyName" 
        version="%pAssemblyVersion"
      />
    </dependentAssembly>
  </dependency>
#! --------------------------------------------------------------------------
#GROUP(%AddDependency, %pAssemblyName, %pAssemblyVersion, %pLinkManifest),AUTO
 #DECLARE(%ManifestFile)
  #SET(%ManifestFile, %ProjectTarget & '.manifest')
  #IF(NOT FILEEXISTS(%ManifestFile))
    #! create manifest if not exists
    #CALL(%CreateManifest, %ManifestFile, %pAssemblyName, %pAssemblyVersion)
  #ELSE
    #! insert/update dependency
    #CALL(%UpdateManifest, %ManifestFile, %pAssemblyName, %pAssemblyVersion)
  #ENDIF
  #IF(%pLinkManifest)
     #PROJECT(%ManifestFile)
  #ENDIF
